#!/bin/bash

# ========================================================
# Script d'installation automatique pour UNIT3D sur Ubuntu 24.04
# Version: 6.0 - Installation robuste et corrigée
# Date: 11 avril 2025
# ========================================================

# Vérification des privilèges root
if [[ $EUID -ne 0 ]]; then
   echo "Ce script doit être exécuté en tant que root"
   exit 1
fi

# Variables de configuration
DB_NAME="unit3d"
DB_USER="unit3d"
DB_PASS=$(openssl rand -base64 32)
APP_URL="http://localhost"

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonctions utilitaires
print_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

print_section() {
    echo -e "${BLUE}[SECTION]${NC} $1"
    echo "=================================================="
}

# Début de l'installation
clear
echo "=================================================="
echo "     Installation automatique de UNIT3D"
echo "=================================================="
echo ""
echo "Ce script va installer UNIT3D sur votre serveur Ubuntu 24.04"
echo "ATTENTION: Une phase de nettoyage va supprimer toutes les installations existantes"
echo ""
read -p "Voulez-vous continuer? (o/n): " confirm
if [[ "$confirm" != "o" && "$confirm" != "O" ]]; then
    echo "Installation annulée"
    exit 0
fi

# Phase de nettoyage complet
print_section "NETTOYAGE COMPLET DU SYSTÈME"
print_info "Suppression des installations précédentes..."

systemctl stop nginx php8.4-fpm mariadb redis-server meilisearch 2>/dev/null || true
rm -rf /var/www/UNIT3D /etc/nginx/sites-available/unit3d /etc/nginx/sites-enabled/unit3d /usr/local/bin/update-unit3d /etc/systemd/system/meilisearch.service || true

mysql -e "DROP DATABASE IF EXISTS unit3d;" || true
mysql -e "DROP USER IF EXISTS 'unit3d'@'localhost';" || true

rm -rf /root/.composer /var/www/.composer /home/*/.composer || true
rm -rf /root/.npm /var/www/.npm /home/*/.npm || true

print_info "Nettoyage terminé."

# Demander les informations nécessaires
read -p "Entrez le nom de domaine (sans http/https): " domain_name
read -p "Entrez l'adresse email pour l'administrateur: " admin_email
read -s -p "Entrez le mot de passe pour l'administrateur: " admin_password
echo ""
read -s -p "Confirmez le mot de passe: " admin_password_confirm

if [[ "$admin_password" != "$admin_password_confirm" ]]; then
    print_error "Les mots de passe ne correspondent pas."
    exit 1
fi

APP_URL="https://$domain_name"

# Mise à jour du système et installation des dépendances principales
print_section "MISE À JOUR DU SYSTÈME ET INSTALLATION DES DÉPENDANCES"
apt update && apt upgrade -y
apt install -y software-properties-common curl git unzip wget gnupg2 ca-certificates apt-transport-https redis-server mariadb-server nginx nodejs npm composer certbot python3-certbot-nginx php8.4 php8.4-{fpm,cli,common,bcmath,curl,gd,intl,mbstring,mysql,opcache,readline,redis,xml,zip}

# Configuration MariaDB avec création utilisateur et base de données
print_section "CONFIGURATION DE MARIADB"
mysql_secure_installation <<EOF

y
n
y
y
y
EOF

mysql -e "
CREATE DATABASE IF NOT EXISTS $DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';
GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';
FLUSH PRIVILEGES;
"

# Téléchargement du projet UNIT3D et installation des dépendances PHP/Node.js
print_section "INSTALLATION DE UNIT3D"
mkdir -p /var/www && cd /var/www && git clone https://github.com/HDInnovations/UNIT3D.git && cd UNIT3D

chown -R www-data:www-data /var/www/UNIT3D && chmod -R 775 /var/www/UNIT3D/storage /var/www/UNIT3D/bootstrap/cache

sudo -u www-data composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-req=php || { print_error "Échec de Composer."; exit 1; }
sudo -u www-data npm install || { print_error "Échec de npm install."; exit 1; }
sudo -u www-data npm run build || { print_error "Échec de npm run build."; exit 1; }

cp .env.example .env && sed -i \
-e "s|APP_URL=.*|APP_URL=$APP_URL|" \
-e "s|DB_DATABASE=.*|DB_DATABASE=$DB_NAME|" \
-e "s|DB_USERNAME=.*|DB_USERNAME=$DB_USER|" \
-e "s|DB_PASSWORD=.*|DB_PASSWORD=$DB_PASS|" .env

php artisan key:generate && sudo -u www-data php artisan migrate --seed --force && sudo -u www-data php artisan storage:link

# Configuration Nginx avec HTTPS via Certbot
print_section "CONFIGURATION DE NGINX ET HTTPS"
cat > /etc/nginx/sites-available/unit3d <<EOF
server {
    listen 80;
    server_name $domain_name;
    root /var/www/UNIT3D/public;

    index index.php;

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \.php\$ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        fastcgi_param PHP_VALUE "upload_max_filesize=100M \n post_max_size=100M";
    }

    client_max_body_size 100M;
}
EOF

ln -s /etc/nginx/sites-available/unit3d /etc/nginx/sites-enabled/
nginx -t && systemctl reload nginx && certbot --nginx --redirect --agree-tos --email "$admin_email" -d "$domain_name"

print_section "INSTALLATION TERMINÉE AVEC SUCCÈS!"
